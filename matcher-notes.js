[{"content":"import { screen, render } from '@testing-library/react';\n\nfunction Form() {\n  return (\n    <form>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input id=\"email\" />\n      </div>\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <input id=\"name\" />\n      </div>\n      <button aria-label=\"button1\">\n        <svg />\n      </button>\n      <button aria-label=\"button2\">\n        <svg />\n      </button>\n    </form>\n  );\n}\n\nrender(<Form/>);","type":"code","id":"taq6c"},{"content":"test('show two inputs and a single button', () =>{\r\n  render(<Form/>)\r\n\r\n  const inputs = screen.getAllByRole('textbox');\r\n\r\n// accessbile names\r\n  // const button = screen.getByRole('button', \r\n  // {\r\n  //   name: /submit/i\r\n  // }\r\n  // );\r\n  // const submitButton = screen.getByTestId('button1');\r\n\r\n  const submitButton = screen.getByRole('button', {name : /button1/i})\r\n\r\n  expect(inputs).toHaveLength(2);\r\n\r\n  expect(submitButton).toBeInTheDocument();\r\n});\r\n\r\n\r\n\r\ntest('two inputs and the button must be filled', async() => {\r\n\r\n  const emailInput = screen.getByRole('textbox', {name: /email/i});\r\n\r\n})\r\n\r\n\r\n","type":"code","id":"uocqt"},{"content":"import { screen, render, within } from '@testing-library/react';\n\nfunction FormData() {\n  return (\n    <div>\n      <button>Go Back </button>\n      <form aria-label=\"form\">\n        <button>Save</button>\n        <button>Cancel</button>\n      </form>\n    </div>\n  );\n}\n\nrender(<FormData />);","type":"code","id":"qzlco"},{"content":"function toContainRole(container, role, quantity = 1) {\n  const elements = within(container).queryAllByRole(role);\n\n  if (elements.length == quantity) {\n    return {\n      pass: true,\n    };\n  }\n\n  return {\n    pass: false,\n    message: () =>\n      `Expected to find ${quantity} ${role} elements. Found ${elements.length} instead`,\n  };\n}\n\nexpect.extend({ toContainRole });","type":"code","id":"t2rrd"},{"content":"test('to get the form element', () => {\n  render(<FormData />);\n\n\n  const form = screen.getByRole('form');\n\n  expect(form).toContainRole('button', 2);\n\n\n});","type":"code","id":"0f74l"}]